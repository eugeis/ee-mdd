def _scripts = System.getenv('CG_CM_SCRIPTS_HOME') ?: 'D:/CG/src/cg-cm/cg-cm-scripts'
ext.scripts = project.hasProperty('superpom') ? project.superpom : "$_scripts/gradlebuild"
logger.info "Calculated 'superpom' location: $scripts"

File f = null
try {
  f = file("$scripts/repos.gradle")
} catch (e) {}

allprojects {
  group = 'ee.mdd'
  version = '1.0-SNAPSHOT'
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'groovy'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'


  if(f && f.exists()) {
    apply from: f.absolutePath
  } else {
    repositories {
      mavenLocal()
      mavenCentral()
    }
  }

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

  dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-ext:1.7.12'
    runtime 'ch.qos.logback:logback-classic:1.0.11'
    testCompile 'junit:junit:4.+'
  }



  jar {
    manifest {
      attributes 'Implementation-Title': 'Model Driven Development - DSL and Generator for several languages', 'Implementation-Version': version
    }

    task cleanAll << { task ->
      ['bin', 'target', 'build', 'dist', 'temp', '.idea', 'dist.zip'].each { name ->
        def file = new File("$task.project.name/$name")
        if(file.exists()) if(file.isDirectory())file.deleteDir() else file.delete()
      }
    }

    task createFolders << { task ->
      ['src/main/groovy'].each { name ->
        def file = new File("$task.project.name/$name")
        file.mkdirs()
      }
    }
  }

  defaultTasks 'build', 'install'
}
